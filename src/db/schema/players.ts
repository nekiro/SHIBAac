import { mysqlTable, index, primaryKey, int, varchar, bigint, unique, tinyint, smallint } from "drizzle-orm/mysql-core";
import { Accounts } from "./accounts";

export const Players = mysqlTable(
	"players",
	{
		id: int().autoincrement().notNull(),
		name: varchar({ length: 255 }).notNull(),
		groupId: int("group_id").default(1).notNull(),
		accountId: int("account_id")
			.default(0)
			.notNull()
			.references(() => Accounts.id, { onDelete: "cascade" }),
		level: int().default(1).notNull(),
		vocation: int().default(0).notNull(),
		health: int().default(150).notNull(),
		healthmax: int().default(150).notNull(),
		experience: bigint({ mode: "number", unsigned: true }).notNull(),
		lookbody: int().default(0).notNull(),
		lookfeet: int().default(0).notNull(),
		lookhead: int().default(0).notNull(),
		looklegs: int().default(0).notNull(),
		looktype: int().default(136).notNull(),
		lookaddons: int().default(0).notNull(),
		lookmount: int().default(0).notNull(),
		lookmounthead: int().default(0).notNull(),
		lookmountbody: int().default(0).notNull(),
		lookmountlegs: int().default(0).notNull(),
		lookmountfeet: int().default(0).notNull(),
		direction: tinyint({ unsigned: true }).default(2).notNull(),
		maglevel: int().default(0).notNull(),
		mana: int().default(0).notNull(),
		manamax: int().default(0).notNull(),
		manaspent: bigint({ mode: "number", unsigned: true }).notNull(),
		soul: int({ unsigned: true }).default(0).notNull(),
		townId: int("town_id").default(1).notNull(),
		posx: int().default(0).notNull(),
		posy: int().default(0).notNull(),
		posz: int().default(0).notNull(),
		// Warning: Can't parse blob from database
		// blobType: blob("conditions"),
		cap: int().default(400).notNull(),
		sex: int().default(0).notNull(),
		lastlogin: bigint({ mode: "number", unsigned: true }).notNull(),
		lastip: int({ unsigned: true }).default(0).notNull(),
		save: tinyint().default(1).notNull(),
		skull: tinyint().default(0).notNull(),
		skulltime: bigint({ mode: "number" }).notNull(),
		lastlogout: bigint({ mode: "number", unsigned: true }).notNull(),
		blessings: tinyint().default(0).notNull(),
		onlinetime: bigint({ mode: "number" }).notNull(),
		deletion: bigint({ mode: "number" }).notNull(),
		balance: bigint({ mode: "number", unsigned: true }).notNull(),
		offlinetrainingTime: smallint("offlinetraining_time", { unsigned: true }).default(43200).notNull(),
		offlinetrainingSkill: int("offlinetraining_skill").default(-1).notNull(),
		stamina: smallint({ unsigned: true }).default(2520).notNull(),
		skillFist: int("skill_fist", { unsigned: true }).default(10).notNull(),
		skillFistTries: bigint("skill_fist_tries", { mode: "number", unsigned: true }).notNull(),
		skillClub: int("skill_club", { unsigned: true }).default(10).notNull(),
		skillClubTries: bigint("skill_club_tries", { mode: "number", unsigned: true }).notNull(),
		skillSword: int("skill_sword", { unsigned: true }).default(10).notNull(),
		skillSwordTries: bigint("skill_sword_tries", { mode: "number", unsigned: true }).notNull(),
		skillAxe: int("skill_axe", { unsigned: true }).default(10).notNull(),
		skillAxeTries: bigint("skill_axe_tries", { mode: "number", unsigned: true }).notNull(),
		skillDist: int("skill_dist", { unsigned: true }).default(10).notNull(),
		skillDistTries: bigint("skill_dist_tries", { mode: "number", unsigned: true }).notNull(),
		skillShielding: int("skill_shielding", { unsigned: true }).default(10).notNull(),
		skillShieldingTries: bigint("skill_shielding_tries", { mode: "number", unsigned: true }).notNull(),
		skillFishing: int("skill_fishing", { unsigned: true }).default(10).notNull(),
		skillFishingTries: bigint("skill_fishing_tries", { mode: "number", unsigned: true }).notNull(),
	},
	(table) => {
		return {
			accountId: index("account_id").on(table.accountId),
			vocation: index("vocation").on(table.vocation),
			playersId: primaryKey({ columns: [table.id], name: "players_id" }),
			name: unique("name").on(table.name),
		};
	},
);
